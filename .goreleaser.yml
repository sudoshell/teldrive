version: 2
project_name: teldrive
env:
  - GO111MODULE=on
  
builds:
  - env:
      - CGO_ENABLED=0
      
    main: main.go
    flags: -trimpath
    ldflags:
     - -extldflags=-static
     - -s -w
     - -X {{ .ModulePath }}/internal/config.Version={{ .Version }}
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm
      - arm64

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"
  
archives:
  - name_template: "{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README*.md
      - LICENSE
dockers:
  - image_templates:
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-amd64"
    use: buildx
    dockerfile: goreleaser.dockerfile
    build_flag_templates:
    - "--platform=linux/amd64"

  - image_templates:
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-arm64"
      - "ghcr.io/sudoshell/{{ .ProjectName }}:latest"
    use: buildx
    dockerfile: goreleaser.dockerfile
    goarch: arm64
    build_flag_templates:
    - --platform=linux/arm64/v8

docker_manifests:
  - name_template: "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/sudoshell/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/sudoshell/{{ .ProjectName }}:{{ .Tag }}-arm64"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^README'
      - '^Update'
      - Merge pull request
      - Merge branch
